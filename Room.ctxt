#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "LIMBO"\ application.\ \r\n\ "LIMBO"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \r\n\ stores\ a\ reference\ to\ the\ neighboring\ room.\r\n\ \r\n\ @author\ \ Michael\ K\u00F6lling,\ David\ J.\ Barnes\ and\ Areeb\ Hamad\ Mohammed\r\n\ @version\ 2016.02.29\r\n
comment1.params=name\ description
comment1.target=Room(java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n
comment10.params=name
comment10.target=Item\ getItem(java.lang.String)
comment10.text=\r\n\ This\ method\ retrieves\ an\ item\ from\ the\ room\r\n\ @param\ name\ of\ the\ item\r\n\ @return\ the\ Item\ object\ from\ the\ room\r\n
comment11.params=itemToRemove
comment11.target=void\ removeItem(Item)
comment11.text=\r\n\ This\ method\ removes\ an\ item\ from\ the\ room\r\n\ @param\ the\ item\ object\ to\ be\ removed\ from\ the\ room\r\n
comment12.params=
comment12.target=java.lang.String\ getItemsString()
comment12.text=\r\n\ This\ method\ gets\ the\ items\ names\ from\ the\ room\r\n\ @return\ the\ list\ of\ item\ names\ as\ a\ string\r\n
comment2.params=direction\ neighbor
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ @param\ direction\ The\ direction\ of\ the\ exit.\r\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\r\n
comment3.params=newItem
comment3.target=void\ addItem(Item)
comment3.text=\r\n\ This\ method\ adds\ an\ item\ to\ the\ room\r\n\ @param\ The\ item\ to\ be\ added\ to\ the\ room\r\n
comment4.params=
comment4.target=java.lang.String\ getShortDescription()
comment4.text=\r\n\ @return\ The\ short\ description\ of\ the\ room\r\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\r\n
comment5.params=
comment5.target=java.lang.String\ getLongDescription()
comment5.text=\r\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment6.params=
comment6.target=java.lang.String\ getName()
comment6.text=\r\n\ This\ method\ returns\ the\ name\ of\ the\ room\r\n\ @return\ returns\ the\ name\ of\ room\ as\ a\ string\r\n
comment7.params=
comment7.target=java.lang.String\ getExitString()
comment7.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
comment8.params=direction
comment8.target=Room\ getExit(java.lang.String)
comment8.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment9.params=direction
comment9.target=Room\ getRoomFromExits(java.lang.String)
comment9.text=\r\n\ Returns\ the\ room\ from\ the\ hashMap\ exits\r\n\ @param\ direction\r\n\ @return\ \ The\ room\ in\ a\ given\ direction\r\n
numComments=13
